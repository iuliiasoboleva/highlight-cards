import React, { useState } from 'react';

import './styles.css';

const initialManagers = [
  {
    id: 1,
    name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
    location: '–¢–æ—á–∫–∞ 1',
    shift: '–£—Ç—Ä–µ–Ω–Ω—è—è',
  },
];

const ManagersPage = () => {
  const [managers, setManagers] = useState(initialManagers);
  const [searchQuery, setSearchQuery] = useState('');
  const [showAddModal, setShowAddModal] = useState(false);
  const [newManager, setNewManager] = useState({
    name: '',
    location: '',
    shift: '',
  });

  const handleAdd = () => {
    setManagers([...managers, { ...newManager, id: Date.now() }]);
    setNewManager({ name: '', location: '', shift: '' });
    setShowAddModal(false);
  };

  const handleRemove = (id) => {
    setManagers(managers.filter((m) => m.id !== id));
  };

  const filteredManagers = managers.filter((m) =>
    m.name.toLowerCase().includes(searchQuery.toLowerCase()),
  );

  return (
    <div className="managers-page">
      <div className="managers-header">
        <h2>–ú–µ–Ω–µ–¥–∂–µ—Ä—ã</h2>
        <button className="download-btn">üì•</button>
      </div>

      <div className="managers-controls">
        <button className="btn-dark" onClick={() => setShowAddModal(true)}>
          –î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        </button>
        <input
          className="search-input"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞"
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
        />
      </div>

      <div className="managers-grid">
        <div className="manager-card create-card" onClick={() => setShowAddModal(true)}>
          <h3>–°–æ–∑–¥–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞</h3>
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –¥–ª—è —Ä–∞–∑–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤—ã–¥–∞—á–∏ –∫–∞—Ä—Ç –∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
            —à—Ç–∞–º–ø–æ–≤. –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ø–æ —Ç–æ—Ä–≥–æ–≤—ã–º —Ç–æ—á–∫–∞–º –∏–ª–∏ –∂–µ –ø–æ —Å–º–µ–Ω–∞–º.
          </p>
          <span className="emoji">üßë‚Äçüíº</span>
        </div>

        <div className="manager-card scanner-card">
          <h3>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ-—Å–∫–∞–Ω–µ—Ä</h3>
          <p>
            –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ-—Å–∫–∞–Ω–µ—Ä –∫–∞—Ä—Ç —Å–≤–æ–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º –≤ —Ç–æ—á–∫–∞—Ö –ø—Ä–æ–¥–∞–∂. –° –ø–æ–º–æ—â—å—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            –æ–Ω–∏ —Å–º–æ–≥—É—Ç –ø—Ä–æ–±–∏–≤–∞—Ç—å —à—Ç–∞–º–ø—ã –∫–ª–∏–µ–Ω—Ç–∞–º –∏ –≤—ã–¥–∞–≤–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—ã.
          </p>
          <img className="scanner-icon" src="/scanner.png" alt="scanner" />
          <button className="btn-dark">–û—Ç–∫—Ä—ã—Ç—å</button>
        </div>

        {filteredManagers.map((m) => (
          <div className="manager-card" key={m.id}>
            <div className="manager-card-header">
              <h4>{m.name}</h4>
              <button className="remove-btn" onClick={() => handleRemove(m.id)}>
                üóë
              </button>
            </div>
            <p>
              <strong>–õ–æ–∫–∞—Ü–∏—è:</strong> {m.location}
            </p>
            <p>
              <strong>–°–º–µ–Ω–∞:</strong> {m.shift}
            </p>
          </div>
        ))}
      </div>

      {showAddModal && (
        <div className="modal-overlay">
          <div className="modal">
            <h3>–î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞</h3>
            <input
              type="text"
              placeholder="–ò–º—è"
              value={newManager.name}
              onChange={(e) => setNewManager({ ...newManager, name: e.target.value })}
            />
            <input
              type="text"
              placeholder="–õ–æ–∫–∞—Ü–∏—è"
              value={newManager.location}
              onChange={(e) => setNewManager({ ...newManager, location: e.target.value })}
            />
            <input
              type="text"
              placeholder="–°–º–µ–Ω–∞"
              value={newManager.shift}
              onChange={(e) => setNewManager({ ...newManager, shift: e.target.value })}
            />
            <div className="modal-buttons">
              <button className="btn-dark" onClick={handleAdd}>
                –î–æ–±–∞–≤–∏—Ç—å
              </button>
              <button className="btn-light" onClick={() => setShowAddModal(false)}>
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ManagersPage;
